#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

include debian/scripts/vars
include /usr/share/gnome-pkg-tools/1/rules/uploaders.mk
BUILD_DIR=$(SOURCE_DIR)/$(TAR_DIR)
BUILD_SHARED_DIR=$(SOURCE_DIR)/$(TAR_DIR)-shared
BUILD_STATIC_DIR=$(SOURCE_DIR)/$(TAR_DIR)-static
BUILD_DFB_DIR=$(SOURCE_DIR)/$(TAR_DIR)-dfb

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

##
version=$(shell dpkg-parsechangelog | grep '^Version: ' | sed -e 's/^Version: //' -e 's/-[A-Za-z0-9\.\+]*$$//g' -e 's/+[A-Za-z0-9\.]*$$//g')
major=$(shell echo ${version} | sed -e 's/\(^[0-9]*\)\.[0-9]*\.[0-9]*$$/\1/')
minor=$(shell echo ${version} | sed -e 's/^[0-9]*\.\([0-9]*\)\.[0-9]*$$/\1/')
rel=$(shell echo ${version} | sed -e 's/^[0-9]*\.[0-9]*\.\([0-9]*\)$$/\1/')
shortver=$(major).$(minor)
apiver=2.0
soname=0
suffix=
modver=$(major).$(minor).0
glibver=2.0
atkver=1.0
pangover=1.0
shver=2.8.0
libpath=$(CURDIR)/$(BUILD_SHARED_DIR)/gdk-pixbuf/.libs:$(CURDIR)/$(BUILD_SHARED_DIR)/gdk/.libs:$(CURDIR)/$(BUILD_SHARED_DIR)/gtk/.libs
libpath_dfb=$(CURDIR)/$(BUILD_DFB_DIR)/gdk-pixbuf/.libs:$(CURDIR)/$(BUILD_DFB_DIR)/gdk/.libs:$(CURDIR)/$(BUILD_DFB_DIR)/gtk/.libs

SHARED_PKG=libgtk$(apiver)-$(soname)$(suffix)
SHARED_PKGDIR=$(CURDIR)/debian/$(SHARED_PKG)
DEV_PKG=libgtk$(apiver)-dev
DEV_PKGDIR=$(CURDIR)/debian/$(DEV_PKG)
DFB_PKG=libgtk-directfb-$(apiver)-$(soname)$(suffix)
DFB_PKGDIR=$(CURDIR)/debian/$(DFB_PKG)
DFBDEV_PKG=libgtk-directfb-$(apiver)-dev
DFBDEV_PKGDIR=$(CURDIR)/debian/$(DFBDEV_PKG)
UDEB_PKG=$(DFB_PKG)-udeb
UDEB_PKGDIR=$(CURDIR)/debian/$(UDEB_PKG)
DOC_PKG=libgtk$(apiver)-doc
DOC_PKGDIR=$(CURDIR)/debian/$(DOC_PKG)
BIN_PKG=libgtk$(apiver)-bin
BIN_PKGDIR=$(CURDIR)/debian/$(BIN_PKG)
DEBUG_PKG=$(SHARED_PKG)-dbg
DEBUG_PKGDIR=$(CURDIR)/debian/$(DEBUG_PKG)

debian/control:
	dh_testdir

	sed -e 's/@SONAME@/${soname}${suffix}/g' -e 's/@VERSION@/${version}/g' -e 's/@GNOME_TEAM@/${uploaders}/' $@.in > $@

extract: $(STAMP_DIR)/extract-stamp
$(STAMP_DIR)/extract-stamp:
	dh_testdir

	$(MAKE) -f debian/sys-build.mk source.make

	-test -r /usr/share/misc/config.sub && \
	   cp -f /usr/share/misc/config.sub $(BUILD_DIR)/config.sub
	-test -r /usr/share/misc/config.guess && \
	   cp -f /usr/share/misc/config.guess $(BUILD_DIR)/config.guess

	touch $@

configure-shared: extract $(STAMP_DIR)/configure-shared-stamp
$(STAMP_DIR)/configure-shared-stamp:
	dh_testdir

	cp -ar $(BUILD_DIR) $(BUILD_SHARED_DIR)

	# Add here commands to configure the package.
	cd $(BUILD_SHARED_DIR) && \
	./configure	--host=$(DEB_HOST_GNU_TYPE) \
			--build=$(DEB_BUILD_GNU_TYPE) \
			--prefix=/usr \
			--mandir=\$${prefix}/share/man \
			--infodir=\$${prefix}/share/info \
			--sysconfdir=/etc \
			--with-html-dir=\$${prefix}/share/doc/$(DOC_PKG) \
			--with-xinput=yes \
			--enable-shared \
			--disable-static \
			--enable-explicit-deps=yes

	cd $(BUILD_SHARED_DIR) && \
	sed < libtool > libtool-2 \
	 -e 's/^hardcode_libdir_flag_spec.*$$/hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/' \
	 -e '/^archive_cmds="/s/"$$/ \\$$deplibs"/' && \
	mv libtool-2 libtool

	touch $@

configure-static: extract $(STAMP_DIR)/configure-static-stamp
$(STAMP_DIR)/configure-static-stamp:
	dh_testdir

	cp -ar $(BUILD_DIR) $(BUILD_STATIC_DIR)

	# Add here commands to configure the package.
	cd $(BUILD_STATIC_DIR) && \
	./configure	--host=$(DEB_HOST_GNU_TYPE) \
			--build=$(DEB_BUILD_GNU_TYPE) \
			--prefix=/usr \
			--mandir=\$${prefix}/share/man \
			--infodir=\$${prefix}/share/info \
			--sysconfdir=/etc \
			--with-xinput=yes \
			--with-included-loaders=yes \
			--disable-modules \
			--disable-shared \
			--enable-static \
			--enable-explicit-deps=yes

	cd $(BUILD_STATIC_DIR) && \
	sed < libtool > libtool-2 \
	 -e 's/^hardcode_libdir_flag_spec.*$$/hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/' \
	 -e '/^archive_cmds="/s/"$$/ \\$$deplibs"/' && \
	mv libtool-2 libtool

	touch $@

configure-dfb: extract $(STAMP_DIR)/configure-dfb-stamp
$(STAMP_DIR)/configure-dfb-stamp:
	dh_testdir

	cp -ar $(BUILD_DIR) $(BUILD_DFB_DIR)

	# Add here commands to configure the package.
	cd $(BUILD_DFB_DIR) && \
	./configure	--host=$(DEB_HOST_GNU_TYPE) \
			--build=$(DEB_BUILD_GNU_TYPE) \
			--prefix=/usr \
			--mandir=\$${prefix}/share/man \
			--infodir=\$${prefix}/share/info \
			--sysconfdir=/etc \
			--with-html-dir=\$${prefix}/share/doc/$(DOC_PKG) \
			--with-xinput=no \
			--enable-shared \
			--disable-static \
			--with-gdktarget=directfb \
			--enable-explicit-deps=yes

	cd $(BUILD_DFB_DIR) && \
	sed < libtool > libtool-2 \
	 -e 's/^hardcode_libdir_flag_spec.*$$/hardcode_libdir_flag_spec=" -D__LIBTOOL_IS_A_FOOL__ "/' \
	 -e '/^archive_cmds="/s/"$$/ \\$$deplibs"/' && \
	mv libtool-2 libtool

	touch $@

configure: configure-static configure-shared configure-dfb

build-shared: debian/control configure-shared $(STAMP_DIR)/build-shared-stamp
$(STAMP_DIR)/build-shared-stamp:
	dh_testdir

	-rm -f $(STAMP_DIR)/install-test-stamp

	# Add here commands to compile the package.
	$(MAKE) -C $(BUILD_SHARED_DIR) \
		LD_LIBRARY_PATH=$(libpath):$(LD_LIBRARY_PATH)

	touch $@

build-static: debian/control configure-static $(STAMP_DIR)/build-static-stamp
$(STAMP_DIR)/build-static-stamp:
	dh_testdir

	-rm -f $(STAMP_DIR)/install-test-stamp

	# Add here commands to compile the package.
	$(MAKE) -C $(BUILD_STATIC_DIR) \
		RUN_QUERY_IMMODULES_TEST=false

	touch $@

build-dfb: debian/control configure-dfb $(STAMP_DIR)/build-dfb-stamp
$(STAMP_DIR)/build-dfb-stamp:
	dh_testdir

	-rm -f $(STAMP_DIR)/install-test-stamp

	# Add here commands to compile the package.
	$(MAKE) -C $(BUILD_DFB_DIR) \
		LD_LIBRARY_PATH=$(libpath_dfb):$(LD_LIBRARY_PATH)

	touch $@

build: build-static build-shared build-dfb

clean:: debian/control
	dh_testdir
	dh_testroot

	# Add here commands to clean up after the build process.
	$(MAKE) -f debian/sys-build.mk source.clean
	-rm -rf $(BUILD_SHARED_DIR)
	-rm -rf $(BUILD_STATIC_DIR)
	-rm -rf $(BUILD_DFB_DIR)
	-rm -rf $(STAMP_DIR)

	dh_clean

install-test: $(STAMP_DIR)/install-test-stamp
$(STAMP_DIR)/install-test-stamp:
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	touch $@

install-shared: build-shared install-test
	# Add here commands to install the package into debian/tmp
	$(MAKE) -C $(BUILD_SHARED_DIR) install DESTDIR=$(SHARED_PKGDIR)

install-static: build-static install-test
	# Add here commands to install the package into debian/tmp
	$(MAKE) -C $(BUILD_STATIC_DIR) install DESTDIR=$(SHARED_PKGDIR) \
		RUN_QUERY_IMMODULES_TEST=false \
		RUN_QUERY_LOADER_TEST=false

install-dfb: build-shared install-test
	# Add here commands to install the package into debian/tmp
	$(MAKE) -C $(BUILD_DFB_DIR) install DESTDIR=$(DFB_PKGDIR)
	find $(DFB_PKGDIR) -name \*.la -exec rm -f \{\} \;
	find $(DFB_PKGDIR) -name libpixbufloader\* \! -name \*png\* -exec rm -f \{\} \;
	mkdir -p $(UDEB_PKGDIR)/etc/gtk-2.0
	$(BUILD_SHARED_DIR)/gdk-pixbuf/gdk-pixbuf-query-loaders \
		$(DFB_PKGFIR)/usr/lib/gtk-2.0/*/loaders/*.so | \
		sed s,$(DFB_PKGDIR),, > $(UDEB_PKGDIR)/etc/gtk-2.0/gdk-pixbuf.loaders

install: install-static install-shared install-dfb
	# generating debian files from .in
	for f in `find debian/ -maxdepth 1 -name "[^c]*.in"`; do \
		sed -e "s/@VERSION@/${version}/g" -e "s/@MODVER@/${modver}/g" -e "s/@APIVER@/${apiver}/g" $$f > `echo $$f | sed -e "s/\.in//"`; \
	done

	# start with the udeb
	mkdir -p $(UDEB_PKGDIR)/usr/lib/gtk-2.0
	cp $(DFB_PKGDIR)/usr/lib/*.so.? $(UDEB_PKGDIR)/usr/lib/
	# We don't need the rpath in the udeb
	chrpath -d $(UDEB_PKGDIR)/usr/lib/*.so.?
	cp -r $(DFB_PKGDIR)/usr/lib/gtk-2.0/[0-9]* \
		$(UDEB_PKGDIR)/usr/lib/gtk-2.0/
	rm -rf $(UDEB_PKGDIR)/usr/lib/gtk-2.0/*/{engines,immodules}

	# remove files that are already here in the other build
	cd $(SHARED_PKGDIR) && \
		find -L -type f -exec rm -f $(DFB_PKGDIR)/\{\} \;

	# for -doc
	cp -a $(BUILD_SHARED_DIR)/docs/faq/html $(DOC_PKGDIR)/usr/share/doc/$(DOC_PKG)/gtk-faq
	cp -a $(CURDIR)/debian/gtk-faq.devhelp $(DOC_PKGDIR)/usr/share/doc/$(DOC_PKG)/gtk-faq/

	cp -a $(BUILD_SHARED_DIR)/docs/tutorial/html $(DOC_PKGDIR)/usr/share/doc/$(DOC_PKG)/gtk-tutorial
	cp $(CURDIR)/debian/gtk-tutorial.devhelp $(DOC_PKGDIR)/usr/share/doc/$(DOC_PKG)/gtk-tutorial/

	cp -ar $(BUILD_SHARED_DIR)/docs/tutorial/images $(DOC_PKGDIR)/usr/share/doc/$(DOC_PKG)/gtk-tutorial/
	cp $(BUILD_SHARED_DIR)/docs/*.txt $(DOC_PKGDIR)/usr/share/doc/$(DOC_PKG)

	# don't need executable attribute
	for f in `find $(SHARED_PKGDIR)/usr/share/themes -type f`; do \
		chmod a-x $$f; \
	done

	# clean the unnecessary files up
	rm -rf $(SHARED_PKGDIR)/usr/share/gtk-doc
	find $(SHARED_PKGDIR)/usr/lib/gtk-2.0/ -type f -name \*a \
		-exec rm -f \{\} \;

	dh_movefiles --sourcedir=debian/$(SHARED_PKG)

	# scripts and support binaries
	for file in `ls $(SHARED_PKGDIR)/usr/bin`; do \
		ln -sf ../lib/$(SHARED_PKG)/$$file \
			$(BIN_PKGDIR)/usr/bin/$$file ; \
	done
	mv $(SHARED_PKGDIR)/usr/bin \
		$(SHARED_PKGDIR)/usr/lib/$(SHARED_PKG)
	for file in update-gtk-immodules update-gdkpixbuf-loaders; do \
		install -m 755 $(CURDIR)/debian/$$file \
			$(SHARED_PKGDIR)/usr/lib/$(SHARED_PKG) ; \
		ln -sf ../lib/$(SHARED_PKG)/$$file \
			$(BIN_PKGDIR)/usr/sbin/$$file ; \
	done

	mkdir -p $(DFBDEV_PKGDIR)/usr/lib
	mv $(DFB_PKGDIR)/usr/lib/{pkgconfig,*.so} $(DFBDEV_PKGDIR)/usr/lib/
	mv $(DFB_PKGDIR)/usr/include $(DFBDEV_PKGDIR)/usr/

	-find $(CURDIR)/debian/ -type d -empty | xargs rmdir -p > /dev/null 2>&1

	# don't delete /etc/gtk-2.0
	install -d $(BIN_PKGDIR)/etc/gtk-$(apiver)

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i

	dh_installdocs -i

	rm -rf $(BIN_PKGDIR)/usr/share/doc/$(BIN_PKG)

	dh_link -p$(DOC_PKG)					\
		usr/share/doc/libglib$(glibver)-doc/glib	\
		usr/share/doc/libgtk$(apiver)-doc/glib		\
		usr/share/doc/libglib$(glibver)-doc/gobject	\
		usr/share/doc/libgtk$(apiver)-doc/gobject	\
		usr/share/doc/libatk$(atkver)-doc/atk		\
		usr/share/doc/libgtk$(apiver)-doc/atk		\
		usr/share/doc/libpango$(pangover)-doc/pango	\
		usr/share/doc/libgtk$(apiver)-doc/pango
	dh_link -p$(BIN_PKG) \
		usr/share/doc/$(SHARED_PKG) \
		usr/share/doc/$(BIN_PKG)

# create symlinks in /usr/share/gtk-doc/html
	for i in gdk gdk-pixbuf gtk gtk-faq gtk-tutorial; do	\
		dh_link -p$(DOC_PKG)				\
			usr/share/doc/libgtk$(apiver)-doc/$$i	\
			usr/share/gtk-doc/html/$$i;		\
	done

	dh_installexamples -i
	dh_installman -i
	dh_installinfo -i
	dh_installchangelogs -i $(BUILD_DIR)/ChangeLog
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a

#	dh_installdebconf	
	dh_installdocs -a

	rm -rf $(SHARED_PKGDIR)/usr/share/doc/$(SHARED_PKG)
	rm -rf $(DEBUG_PKGDIR)/usr/share/doc/$(DEBUG_PKG)
	rm -rf $(DEV_PKGDIR)/usr/share/doc/$(DEV_PKG)
	rm -rf $(DFB_PKGDIR)/usr/share/doc/$(DFB_PKG)
	rm -rf $(DFBDEV_PKGDIR)/usr/share/doc/$(DFBDEV_PKGDIR)

	dh_link -p$(SHARED_PKG) \
		usr/share/doc/libgtk$(apiver)-common \
		usr/share/doc/$(SHARED_PKG)
	dh_link -p$(DEBUG_PKG) \
		usr/share/doc/$(SHARED_PKG) \
		usr/share/doc/$(DEBUG_PKG)
	dh_link -p$(DEV_PKG) \
		usr/share/doc/$(SHARED_PKG) \
		usr/share/doc/$(DEV_PKG)
	dh_link -p$(DFB_PKG) \
		usr/share/doc/$(SHARED_PKG) \
		usr/share/doc/$(DFB_PKG)
	dh_link -p$(DFBDEV_PKG) \
		usr/share/doc/$(DFB_PKG) \
		usr/share/doc/$(DFBDEV_PKG)

	dh_installexamples -a

	rm $(CURDIR)/debian/gtk$(apiver)-examples/usr/share/doc/gtk$(apiver)-examples/examples/find-examples.sh

	dh_installman -a
	dh_installinfo -a
	dh_installchangelogs -a $(BUILD_DIR)/ChangeLog
	dh_strip -a --dbg-package=$(DEBUG_PKG)
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -X usr/lib/gtk-$(apiver) -p$(SHARED_PKG) -V "${SHARED_PKG} (>= ${shver})" --add-udeb=$(UDEB_PKG)
	dh_makeshlibs -X usr/lib/gtk-$(apiver) -p$(DFB_PKG)    -V    "${DFB_PKG} (>= ${shver})" --add-udeb=$(UDEB_PKG)
	dh_installdeb -a
	cat debian/*/DEBIAN/shlibs | awk '{ print $$1,$$2 }' > debian/shlibs.local
	dh_shlibdeps -a
	rm -f debian/shlibs.local
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build build-shared build-static build-dfb clean binary-indep binary-arch binary install install-shared install-static install-dfb configure configure-shared configure-static configure-dfb debian/control
