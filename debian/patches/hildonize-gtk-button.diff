Index: gtk/gtk/gtkbutton.c
===================================================================
--- gtk.orig/gtk/gtkbutton.c
+++ gtk/gtk/gtkbutton.c
@@ -519,6 +519,26 @@ gtk_button_class_init (GtkButtonClass *k
 							     2,
 							     GTK_PARAM_READABLE));
 
+  /**
+   * GtkButton:tree-view-separator-area:
+   *
+   * Specifies the amount of pixels to reserve for drawing a separator
+   * below the button.  This is used to visually separate column headers
+   * from the tree view.  The separator which will be drawn is exactly
+   * 1px thick.  When 0, no separator will be drawn.
+   *
+   * Since: maemo 4.0
+   * Stability: Unstable
+   */
+  gtk_widget_class_install_style_property (widget_class,
+					   g_param_spec_int ("tree-view-separator-area",
+							     P_("Tree View Separator Area"),
+							     P_("Amount of pixels to reserve for a separator"),
+							     0,
+							     G_MAXINT,
+							     0,
+							     GTK_PARAM_READABLE));
+
   g_type_class_add_private (gobject_class, sizeof (GtkButtonPrivate));
 }
 
@@ -549,6 +569,11 @@ gtk_button_init (GtkButton *button)
   priv->image_is_stock = TRUE;
   priv->image_position = GTK_POS_LEFT;
   priv->use_action_appearance = TRUE;
+
+  g_object_set (G_OBJECT (button),
+		"tap-and-hold-state", GTK_STATE_ACTIVE,
+		"can-focus", FALSE,
+		NULL);
 }
 
 static void
@@ -1328,11 +1353,13 @@ gtk_button_size_request (GtkWidget
   GtkBorder inner_border;
   gint focus_width;
   gint focus_pad;
+  gint tree_view_separator_area;
 
   gtk_button_get_props (button, &default_border, NULL, &inner_border, NULL);
   gtk_widget_style_get (GTK_WIDGET (widget),
 			"focus-line-width", &focus_width,
 			"focus-padding", &focus_pad,
+			"tree-view-separator-area", &tree_view_separator_area,
 			NULL);
  
   requisition->width = ((GTK_CONTAINER (widget)->border_width +
@@ -1360,6 +1387,8 @@ gtk_button_size_request (GtkWidget
   
   requisition->width += 2 * (focus_width + focus_pad);
   requisition->height += 2 * (focus_width + focus_pad);
+
+  requisition->height += tree_view_separator_area;
 }
 
 static void
@@ -1376,11 +1405,13 @@ gtk_button_size_allocate (GtkWidget
   GtkBorder inner_border;
   gint focus_width;
   gint focus_pad;
+  gint tree_view_separator_area;
 
   gtk_button_get_props (button, &default_border, NULL, &inner_border, NULL);
   gtk_widget_style_get (GTK_WIDGET (widget),
 			"focus-line-width", &focus_width,
 			"focus-padding", &focus_pad,
+			"tree-view-separator-area", &tree_view_separator_area,
 			NULL);
  
 			    
@@ -1404,7 +1435,8 @@ gtk_button_size_allocate (GtkWidget
                                     inner_border.right -
 				    border_width * 2);
       child_allocation.height = MAX (1, widget->allocation.height -
-                                     ythickness * 2 -
+				     tree_view_separator_area -
+				     ythickness * 2 -
                                      inner_border.top -
                                      inner_border.bottom -
 				     border_width * 2);
@@ -1459,6 +1491,7 @@ _gtk_button_paint (GtkButton          *b
   gboolean interior_focus;
   gint focus_width;
   gint focus_pad;
+  gint tree_view_separator_area;
 
   widget = GTK_WIDGET (button);
 
@@ -1470,13 +1503,27 @@ _gtk_button_paint (GtkButton          *b
       gtk_widget_style_get (widget,
 			    "focus-line-width", &focus_width,
 			    "focus-padding", &focus_pad,
-			    NULL); 
+			    "tree-view-separator-area", &tree_view_separator_area,
+			    NULL);
 	
       x = widget->allocation.x + border_width;
       y = widget->allocation.y + border_width;
       width = widget->allocation.width - border_width * 2;
       height = widget->allocation.height - border_width * 2;
 
+      if (tree_view_separator_area != 0)
+	{
+	  gtk_paint_hline (widget->style,
+			   widget->window,
+			   GTK_STATE_NORMAL,
+			   area,
+			   widget,
+			   "listboxseparator",
+			   area->x - focus_width - focus_pad,
+			   area->x + area->width + focus_width + focus_pad,
+			   height + 2 * tree_view_separator_area);
+	}
+
       if (gtk_widget_has_default (widget) &&
 	  GTK_BUTTON (widget)->relief == GTK_RELIEF_NORMAL)
 	{
