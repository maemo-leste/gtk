From: Simon McVittie <smcv@debian.org>
Date: Mon, 28 Dec 2020 15:13:02 +0000
Subject: Reinstate marshallers that accidentally became part of the ABI

gtkmarshal.c in GTK 2.24.32 was generated by a version of
glib-genmarshal that produced unintended symbols. It was regenerated
for 2.24.33, but it looks as though a few packages might already be
referring to those symbols. Patch them back in for ABI compatibility.

Forwarded: not-needed
---
 gtk/gtkmisc.c | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/gtk/gtkmisc.c b/gtk/gtkmisc.c
index ff1c2ff..79b72a4 100644
--- a/gtk/gtkmisc.c
+++ b/gtk/gtkmisc.c
@@ -339,5 +339,37 @@ gtk_misc_realize (GtkWidget *widget)
     }
 }
 
+
+#define MARSHALLER(name) \
+G_MODULE_EXPORT \
+void gtk_marshal_ ## name (GClosure *closure, \
+                           GValue *return_value, \
+                           guint n_param_values, \
+                           const GValue *param_values, \
+                           gpointer invocation_hint, \
+                           gpointer marshal_data); \
+void \
+gtk_marshal_ ## name (GClosure *closure, \
+                      GValue *return_value, \
+                      guint n_param_values, \
+                      const GValue *param_values, \
+                      gpointer invocation_hint, \
+                      gpointer marshal_data) \
+{ \
+  g_cclosure_marshal_ ## name (closure, return_value, n_param_values, \
+                               param_values, invocation_hint, \
+                               marshal_data); \
+}
+
+MARSHALLER (VOID__BOOLEAN)
+MARSHALLER (VOID__BOXED)
+MARSHALLER (VOID__ENUM)
+MARSHALLER (VOID__INT)
+MARSHALLER (VOID__OBJECT)
+MARSHALLER (VOID__POINTER)
+MARSHALLER (VOID__STRING)
+MARSHALLER (VOID__UINT)
+MARSHALLER (VOID__VOID)
+
 #define __GTK_MISC_C__
 #include "gtkaliasdef.c"
