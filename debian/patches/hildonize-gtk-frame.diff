Index: gtk/gtk/gtkframe.c
===================================================================
--- gtk.orig/gtk/gtkframe.c
+++ gtk/gtk/gtkframe.c
@@ -35,6 +35,8 @@
 
 #define LABEL_PAD 1
 #define LABEL_SIDE_PAD 2
+#define LABEL_BACKGROUND_PAD 8
+#define TITLE_HEIGHT 35
 
 enum {
   PROP_0,
@@ -114,7 +116,7 @@ gtk_frame_class_init (GtkFrameClass *cla
 						       P_("The horizontal alignment of the label"),
 						       0.0,
 						       1.0,
-						       0.0,
+						       0.5,
 						       GTK_PARAM_READWRITE));
   g_object_class_install_property (gobject_class,
 				   PROP_LABEL_YALIGN,
@@ -184,7 +186,7 @@ gtk_frame_init (GtkFrame *frame)
 {
   frame->label_widget = NULL;
   frame->shadow_type = GTK_SHADOW_ETCHED_IN;
-  frame->label_xalign = 0.0;
+  frame->label_xalign = 0.5;
   frame->label_yalign = 0.5;
 }
 
@@ -324,6 +326,7 @@ gtk_frame_set_label (GtkFrame *frame,
   else
     {
       GtkWidget *child = gtk_label_new (label);
+      gtk_widget_set_size_request (child, -1, TITLE_HEIGHT);
       gtk_widget_show (child);
 
       gtk_frame_set_label_widget (frame, child);
@@ -552,6 +555,7 @@ gtk_frame_paint (GtkWidget    *widget,
 	  gfloat xalign;
 	  gint height_extra;
 	  gint x2;
+	  gint label_y;
 
 	  gtk_widget_get_child_requisition (frame->label_widget, &child_requisition);
 
@@ -560,6 +564,7 @@ gtk_frame_paint (GtkWidget    *widget,
 	  else
 	    xalign = 1 - frame->label_xalign;
 
+	  label_y = MAX (0, y - child_requisition.height - widget->style->ythickness);
 	  height_extra = MAX (0, child_requisition.height - widget->style->ythickness)
 	    - frame->label_yalign * child_requisition.height;
 	  y -= height_extra;
@@ -580,6 +585,20 @@ gtk_frame_paint (GtkWidget    *widget,
 				  x, y, width, height,
 				  GTK_POS_TOP,
 				  x2, child_requisition.width + 2 * LABEL_PAD);
+
+	  /* Paint label background */
+	  gtk_paint_box (widget->style, widget->window,
+			 widget->state, GTK_SHADOW_NONE,
+			 area, widget, "frame-label-background",
+			 x, label_y,
+			 width, child_requisition.height);
+
+	  gtk_paint_box (widget->style, widget->window,
+			 widget->state, GTK_SHADOW_NONE,
+			 area, widget, "frame-label",
+			 x + x2 - LABEL_BACKGROUND_PAD, label_y,
+			 child_requisition.width + 2 * LABEL_BACKGROUND_PAD,
+			 child_requisition.height);
 	}
        else
 	 gtk_paint_shadow (widget->style, widget->window,
