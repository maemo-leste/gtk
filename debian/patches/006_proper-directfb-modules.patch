--- gtk+2.0.old/configure.in.orig	2008-09-23 16:50:57.000000000 -0300
+++ gtk+2.0/configure.in	2008-09-24 19:17:53.000000000 -0300
@@ -1625,8 +1625,18 @@
 
   if $PKG_CONFIG --atleast-version $DIRECTFB_REQUIRED_VERSION directfb && $PKG_CONFIG --exists cairo-directfb ; then
       AC_MSG_RESULT(found)
-      GDK_EXTRA_CFLAGS="`$PKG_CONFIG --cflags cairo-directfb` $GDK_EXTRA_CFLAGS"
-      GDK_EXTRA_LIBS="`$PKG_CONFIG --libs cairo-directfb` $GDK_EXTRA_LIBS"
+      # prepend cairo-directfb so that cairo-directfb's CFLAGS appear before
+      # cairo's if both are available (cairo is required by pango); this is
+      # enough to build gdk/
+      GDK_PACKAGES="cairo-directfb directfb $GDK_PACKAGES"
+      # you'd think this isn't needed, but as soon as cairo-directfb or
+      # directfb requires a "rpath" and you want to build binaries (for
+      # example gtk-query-immodules), you need the CFLAGS and LDFLAGS
+      # everywhere; this trick abuses the fact that GTK_DEP_LIBS and
+      # GTK_DEP_CFLAGS include the GDK_EXTRA_LIBS and _FLAGS to pull the
+      # necessary rpath flags
+      GDK_EXTRA_CFLAGS="`$PKG_CONFIG --cflags cairo-directfb directfb`"
+      GDK_EXTRA_LIBS="`$PKG_CONFIG --libs cairo-directfb directfb` $GDK_EXTRA_LIBS"
   else
       AC_MSG_ERROR([
 *** DirectFB $DIRECTFB_REQUIRED_VERSION or newer and the cairo backend 
@@ -1678,7 +1688,7 @@
 CFLAGS="$saved_cflags"
 LDFLAGS="$saved_ldflags"
 
-GDK_PACKAGES="$PANGO_PACKAGES gio-2.0"
+GDK_PACKAGES="$GDK_PACKAGES $PANGO_PACKAGES gio-2.0"
 if test "x$gdktarget" = "xx11"; then
   GDK_PRIVATE_PACKAGES="$X_PACKAGES"
 fi
