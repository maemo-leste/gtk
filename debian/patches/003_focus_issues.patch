Index: ChangeLog
===================================================================
RCS file: /cvs/gnome/gtk+/ChangeLog,v
retrieving revision 1.6286.2.213
diff -u -p -r1.6286.2.213 ChangeLog
--- old/ChangeLog.orig      2005-03-01 14:01:24.000000000 -0300
+++ new/ChangeLog   2005-05-09 21:52:46.869360538 -0300
@@ -1,1 +1,13 @@
+2005-05-04  Owen Taylor  <otaylor@redhat.com>
+
+       * gdk/x11/gdkevents-x11.c gdk/x11/gdkwindow-x11.h: Fix a bug
+       in focus tracking when we move between has_pointer_focus and
+       has_focus_window directly. (#109246, Billy Biggs, Niko Tyni
+       and others)
+
+       * gdk/x11/gdkevents-x11.c: Also fix some extremely confusion
+       that could happen in the case of no window manager + keyboard grabs,
+       by moving to a more consistent model of when we pay attention
+       to mode=NotifyGrab/NotifyUngrab events.
+
 2005-03-01  Matthias Clasen  <mclasen@redhat.com>

        * === Released 2.6.4 ===
Index: gdk/x11/gdkevents-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkevents-x11.c,v
retrieving revision 1.144.2.2
diff -u -p -r1.144.2.2 gdkevents-x11.c
--- old/gdk/x11/gdkevents-x11.c	16 Mar 2005 03:25:09 -0000	1.144.2.2
+++ new/gdk/x11/gdkevents-x11.c	5 May 2005 00:01:43 -0000
@@ -1218,16 +1218,19 @@ gdk_event_translate (GdkDisplay *display
         }
       
       /* Handle focusing (in the case where no window manager is running */
-      if (toplevel &&
-	  xevent->xcrossing.detail != NotifyInferior &&
-	  xevent->xcrossing.focus && !toplevel->has_focus_window)
+      if (toplevel && xevent->xcrossing.detail != NotifyInferior)
 	{
-	  gboolean had_focus = HAS_FOCUS (toplevel);
-
-	  toplevel->has_pointer_focus = TRUE;
+	  toplevel->has_pointer = TRUE;
 
-	  if (HAS_FOCUS (toplevel) != had_focus)
-	    generate_focus_event (window, TRUE);
+	  if (xevent->xcrossing.focus && !toplevel->has_focus_window)
+	    {
+	      gboolean had_focus = HAS_FOCUS (toplevel);
+	      
+	      toplevel->has_pointer_focus = TRUE;
+	      
+	      if (HAS_FOCUS (toplevel) != had_focus)
+		generate_focus_event (window, TRUE);
+	    }
 	}
 
       /* Tell XInput stuff about it if appropriate */
@@ -1312,16 +1315,19 @@ gdk_event_translate (GdkDisplay *display
         }
       
       /* Handle focusing (in the case where no window manager is running */
-      if (toplevel &&
-	  xevent->xcrossing.detail != NotifyInferior &&
-	  xevent->xcrossing.focus && !toplevel->has_focus_window)
+      if (toplevel && xevent->xcrossing.detail != NotifyInferior)
 	{
-	  gboolean had_focus = HAS_FOCUS (toplevel);
-	  
-	  toplevel->has_pointer_focus = FALSE;
-	  
-	  if (HAS_FOCUS (toplevel) != had_focus)
-	    generate_focus_event (window, FALSE);
+	  toplevel->has_pointer = FALSE;
+
+	  if (xevent->xcrossing.focus && !toplevel->has_focus_window)
+	    {
+	      gboolean had_focus = HAS_FOCUS (toplevel);
+	      
+	      toplevel->has_pointer_focus = FALSE;
+	      
+	      if (HAS_FOCUS (toplevel) != had_focus)
+		generate_focus_event (window, FALSE);
+	    }
 	}
 
       event->crossing.type = GDK_LEAVE_NOTIFY;
@@ -1404,10 +1410,25 @@ gdk_event_translate (GdkDisplay *display
 	  switch (xevent->xfocus.detail)
 	    {
 	    case NotifyAncestor:
-	    case NotifyNonlinear:
 	    case NotifyVirtual:
+	      /* When the focus moves from an ancestor of the window to
+	       * the window or a descendent of the window, *and* the
+	       * pointer is inside the window, then we were previously
+	       * receiving keystroke events in the has_pointer_focus
+	       * case and are now receiving them in the
+	       * has_focus_window case.
+	       */
+	      if (toplevel->has_pointer &&
+		  xevent->xfocus.mode != NotifyGrab &&
+		  xevent->xfocus.mode != NotifyUngrab)
+		toplevel->has_pointer_focus = FALSE;
+	      
+	      /* fall through */
+	    case NotifyNonlinear:
 	    case NotifyNonlinearVirtual:
-	      toplevel->has_focus_window = TRUE;
+	      if (xevent->xfocus.mode != NotifyGrab &&
+		  xevent->xfocus.mode != NotifyUngrab)
+		toplevel->has_focus_window = TRUE;
 	      /* We pretend that the focus moves to the grab
 	       * window, so we pay attention to NotifyGrab
 	       * NotifyUngrab, and ignore NotifyWhileGrabbed
@@ -1420,7 +1441,8 @@ gdk_event_translate (GdkDisplay *display
 	       * but the pointer focus is ignored while a
 	       * grab is in effect
 	       */
-	      if (xevent->xfocus.mode != NotifyGrab)
+	      if (xevent->xfocus.mode != NotifyGrab &&
+		  xevent->xfocus.mode != NotifyUngrab)
 		toplevel->has_pointer_focus = TRUE;
 	      break;
 	    case NotifyInferior:
@@ -1447,15 +1469,31 @@ gdk_event_translate (GdkDisplay *display
 	  switch (xevent->xfocus.detail)
 	    {
 	    case NotifyAncestor:
-	    case NotifyNonlinear:
 	    case NotifyVirtual:
+	      /* When the focus moves from the window or a descendent
+	       * of the window to an ancestor of the window, *and* the
+	       * pointer is inside the window, then we were previously
+	       * receiving keystroke events in the has_focus_window
+	       * case and are now receiving them in the
+	       * has_pointer_focus case.
+	       */
+	      if (toplevel->has_pointer &&
+		  xevent->xfocus.mode != NotifyGrab &&
+		  xevent->xfocus.mode != NotifyUngrab)
+		toplevel->has_pointer_focus = TRUE;
+
+	      /* fall through */
+	    case NotifyNonlinear:
 	    case NotifyNonlinearVirtual:
-	      toplevel->has_focus_window = FALSE;
+	      if (xevent->xfocus.mode != NotifyGrab &&
+		  xevent->xfocus.mode != NotifyUngrab)
+		toplevel->has_focus_window = FALSE;
 	      if (xevent->xfocus.mode != NotifyWhileGrabbed)
 		toplevel->has_focus = FALSE;
 	      break;
 	    case NotifyPointer:
-	      if (xevent->xfocus.mode != NotifyUngrab)
+	      if (xevent->xfocus.mode != NotifyGrab &&
+		  xevent->xfocus.mode != NotifyUngrab)
 		toplevel->has_pointer_focus = FALSE;
 	    break;
 	    case NotifyInferior:
Index: gdk/x11/gdkwindow-x11.h
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkwindow-x11.h,v
retrieving revision 1.18
diff -u -p -r1.18 gdkwindow-x11.h
--- old/gdk/x11/gdkwindow-x11.h	18 Oct 2004 21:02:37 -0000	1.18
+++ new/gdk/x11/gdkwindow-x11.h	5 May 2005 00:01:43 -0000
@@ -96,9 +96,14 @@ struct _GdkToplevelX11
    */
   guint has_focus : 1;
 
-  /* Set if !window->has_focus_window, but events are being sent to the
-   * window because the pointer is in it. (Typically, no window
-   * manager is running.
+  /* Set if the pointer is inside this window. (This is needed for
+   * for focus tracking)
+   */
+  guint has_pointer : 1;
+  
+  /* Set if the window is a descendent of the focus window and the pointer is
+   * inside it. (This is the case where the window will receive keystroke
+   * events even window->has_focus_window is FALSE)
    */
   guint has_pointer_focus : 1;
 
